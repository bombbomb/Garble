
// Auto-Generated by Lighthouse

import groovy.json.JsonSlurperClassic
def hasDockerBuilds = false

pipeline {
    agent {
        label 'docker'
    }
    stages {
        stage('Checkout') {
            steps {
                sh "curl -XPUT https://lighthouse.bombbomb.io/hooks/build/bombbomb/garble/${env.BRANCH_NAME}/start"
                checkout scm
            }
        }
        stage('Build Images') {
            steps {
                script {
                    def lighthouseFile = readFile "lighthouse.json"
                    def lighthouseJSON = new JsonSlurperClassic().parseText(lighthouseFile)
                    
                    if (lighthouseJSON.service && lighthouseJSON.service.default && lighthouseJSON.service.default.build) {
                        echo 'Has Docker Builds'
                        hasDockerBuilds = true
                        sh "docker build -t build-${env.BUILD_NUMBER} ."
                    } else {
                        echo 'No Docker Builds Found'
                    }
                }

            }
        }
        stage('Deploy to ECR') {
            steps {
                script {
                    env.GIT_COMMIT = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()
                    env.GIT_DATE = sh(returnStdout: true, script: "git log -1 --format=%cd --date=format:'%Y%m%d%H%M%S'").trim()
                    
                    if (hasDockerBuilds) {
                        env.REGISTRY_ID = sh(returnStdout: true, script: 'aws s3 cp s3://bombbomb-lighthouse/registry_lookup/bombbomb/garble -').trim()

                        sh "eval \$(aws ecr get-login --region us-east-1 --registry-ids ${env.REGISTRY_ID})"
                        sh "docker tag build-${env.BUILD_NUMBER}:latest ${env.REGISTRY_ID}.dkr.ecr.us-east-1.amazonaws.com/bombbomb/garble:${env.GIT_COMMIT}"
                        sh "docker push ${env.REGISTRY_ID}.dkr.ecr.us-east-1.amazonaws.com/bombbomb/garble:${env.GIT_COMMIT}"
                    }
                }
            }
        }
        
        stage('Cleanup Image') {
            steps {
                script {
                    if (hasDockerBuilds) {
                        sh "docker rmi build-${env.BUILD_NUMBER}"
                    }
                }
            }
        }
        
        stage('Save Build Details') {
            steps {
                sh 'git log -1 --pretty=format:\'{%n  "commit": "%H",%n  "author": "%aN <%aE>",%n  "date": "%ad",%n  "message": "%f"%n}\'' + " > ${env.GIT_COMMIT}_details.txt"
                sh "aws s3api put-object --bucket bombbomb-lighthouse --key builds/bombbomb/garble/${env.BRANCH_NAME}/${env.GIT_DATE} --body ${env.GIT_COMMIT}_details.txt"
                sh "rm ${env.GIT_COMMIT}_details.txt"
            }
        }
    }
    
    post {
        always {
            sh "curl -XPUT https://lighthouse.bombbomb.io/hooks/build/bombbomb/garble/${env.BRANCH_NAME}/finish"
        }
    }
}